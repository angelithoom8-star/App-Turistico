name: Buildozer APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      PATH: /usr/bin:${{ github.workspace }}/android-sdk/cmdline-tools/latest/bin:${{ github.workspace }}/android-sdk/platform-tools:${{ github.workspace }}/android-sdk/build-tools/36.1.0:$PATH

    steps:
    - name: 📥 Checkout repo
      uses: actions/checkout@v3

    # ─── Cache Buildozer, SDK y pip ─────────────────────────────
    - name: 💾 Cache SDK y Buildozer
      uses: actions/cache@v4
      with:
        path: |
          ~/.buildozer
          ${{ github.workspace }}/android-sdk
        key: sdk-buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          sdk-buildozer-${{ runner.os }}-

    - name: 💾 Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

    # ─── Instalar dependencias del sistema ──────────────────────
    - name: 🧰 Instalar dependencias
      run: |
        sudo apt update
        sudo apt install -y python3-pip openjdk-11-jdk unzip wget git tar

    # ─── Instalar Buildozer y Cython ───────────────────────────
    - name: 🐍 Instalar Buildozer y Cython
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install buildozer cython

    - name: ✅ Verificar Buildozer
      run: |
        python3 -m buildozer --version

    # ─── Descargar Android SDK ─────────────────────────────────
    - name: 📦 Descargar Android SDK
      run: |
        mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
        cd $ANDROID_SDK_ROOT/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk.zip
        unzip sdk.zip
        mv cmdline-tools latest
        rm sdk.zip

    # ─── Aceptar licencias del SDK ────────────────────────────
    - name: ✅ Aceptar licencias
      run: |
        mkdir -p $HOME/.android
        echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/.android/repositories.cfg
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT

    # ─── Instalar plataformas y build-tools ───────────────────
    - name: 🔧 Instalar SDK y build-tools
      run: |
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
          "platform-tools" "platforms;android-36" "build-tools;36.1.0"

    # ─── Verificar aidl ───────────────────────────────────────
    - name: 🔍 Verificar aidl
      run: |
        if [ -f "$ANDROID_SDK_ROOT/build-tools/36.1.0/aidl" ]; then
          echo "✅ aidl encontrado"
        else
          echo "❌ aidl no encontrado"
          exit 1
        fi

    # ─── Inicializar Buildozer ───────────────────────────────
    - name: 🛠️ Inicializar Buildozer
      run: |
        python3 -m buildozer android update

    # ─── Limpiar compilaciones previas ───────────────────────
    - name: 🧹 Limpiar compilaciones previas
      run: |
        python3 -m buildozer clean || true

    # ─── Compilar APK ─────────────────────────────────────────
    - name: 🚀 Compilar APK con Buildozer
      run: |
        python3 -m buildozer android debug

    # ─── Subir APK como artefacto ─────────────────────────────
    - name: 📤 Subir APK generado
      uses: actions/upload-artifact@v4
      with:
        name: PalmarGrande-APK
        path: |
          bin/*.apk
